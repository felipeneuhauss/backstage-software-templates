# Notice the v1beta3 version
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: node-api
  title: Node API template
  description: Scaffolder v1beta3 template for a Node.js API
spec:
  owner: development
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
          ui:autofocus: true
          ui:options:
            rows: 5

        environment:
          title: Environment
          type: string
          description: Environment of the component
          enum:
            - dev
            - stg
            - prod
          default: dev

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetchBase
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          app_name: ${{ parameters.name }}
          app_env: ${{ parameters.environment }}

    - id: fetchDocs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./community
        url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    - id: publish
      name: Publish
      action: publish:github
      input:
        description: This is ${{ parameters.name }} api
        repoUrl: github.com?owner=hexspark-digital&repo=${{ parameters.name }}
        defaultBranch: 'main'
        repositoryVisibility: public
        protectDefaultBranch: true

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
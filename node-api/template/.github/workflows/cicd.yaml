name: ${{values.app_name}}-CICD

on:
  push:
    paths:
      - '**'
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Run test coverage
        run: npm run test:coverage

  ci:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{'${{ secrets.DOCKER_USERNAME }}'}}
          password: ${{'${{ secrets.DOCKER_PASSWORD }}'}}
      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: Dockerfile
          tags: ${{'${{ secrets.DOCKER_USERNAME }}'}}/${{values.app_name}}:${{'${{ env.SHORT_SHA }}'}}
    outputs:
      short_commit_sha: ${{'${{ env.SHORT_SHA }}'}}
    
  cd: 
    runs-on: self-hosted
    needs: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Update image tag
        run: |
          sed -i "s/tag: \".*\"/tag: \"${{'${{ needs.ci.outputs.short_commit_sha }}'}}\"/" charts/${{values.app_name}}/values-${{values.app_env}}.yaml
          
      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update image tag to ${{'${{ needs.ci.outputs.short_commit_sha }}'}}"
          add: "charts/${{values.app_name}}/values-${{values.app_env}}.yaml"
          push: true

      - name: Install ArgoCD CLI
        run: |
          curl -L -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/
          
      - name: Deploy to ArgoCD
        run: |
          argocd login argocd-server.argocd-backstage --username admin --password ${{'${{ secrets.ARGOCD_PASSWORD }}'}} --insecure
          argocd app sync ${{values.app_name}}-${{values.app_env}} 
            

